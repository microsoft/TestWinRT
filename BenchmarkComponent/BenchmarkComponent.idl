// Modern IDL 3.0: https://docs.microsoft.com/en-us/uwp/midl-3/intro

// BenchmarkComponent exercises indivdual isolated scenarios we want to benchmark in a WinRT projection.

namespace BenchmarkComponent
{
    interface IIntProperties
    {
        Int32 IntProperty{ get; set; };
    }

    interface IBoolProperties
    {
        Boolean BoolProperty{ get; set; };
    }

    interface IDoubleProperties
    {
        Double DoubleProperty{ get; set; };
    }

    delegate Int32 ProvideInt();

    // Class intended to help with benchmarking QueryInterface for the default and non default interfaces.
    [default_interface]
    runtimeclass ClassWithMultipleInterfaces :
        IIntProperties
        , IBoolProperties
        , IDoubleProperties
    {
        ClassWithMultipleInterfaces();

        Int32 DefaultIntProperty{ get; set; };
        Boolean DefaultBoolProperty{ get; set; };
        Double DefaultDoubleProperty{ get; set; };
        Object DefaultObjectProperty{ get; set; };
        String DefaultStringProperty{ get; set; };
        Object NewObject();
    }

    [default_interface]
    runtimeclass WrappedClass
    {
        WrappedClass();

        Int32 DefaultIntProperty{ get; set; };
    }
    

    [default_interface]
    runtimeclass ClassWithMarshalingRoutines
    {
        ClassWithMarshalingRoutines();

        String DefaultStringProperty{ get; set; };
        IInspectable NewTypeErasedKeyValuePairObject{ get; set; };
        IInspectable NewTypeErasedNullableObject{ get; set; };
        IInspectable NewTypeErasedArrayObject{ get; set; };

        IInspectable ExistingTypeErasedKeyValuePairObject{ get; set; };
        IInspectable ExistingTypeErasedNullableObject{ get; set; };
        IInspectable ExistingTypeErasedArrayObject{ get; set; }; 

        WrappedClass NewWrappedClassObject{ get; set; };

        Int32 IntProperty;
        event Windows.Foundation.EventHandler<Int32> IntPropertyChanged;
        event Windows.Foundation.EventHandler<Double> DoublePropertyChanged;
        void RaiseIntChanged();
        void RaiseDoubleChanged();
        void CallForInt(ProvideInt provideInt);

        Windows.Foundation.Collections.IMap<String, WrappedClass> ExistingDictionary{ get; };
    }
}